{"componentChunkName":"component---src-templates-example-tsx","path":"/gallery/html-tooltip","result":{"pageContext":{"source":"import { MultiView } from '@antv/g2plot';\nimport insertCss from 'insert-css';\n\n// 我们用 insert-css 演示引入自定义样式\n// 推荐将样式添加到自己的样式文件中\n// 若拷贝官方代码，别忘了 npm install insert-css\ninsertCss(`\n    .custom-tooltip-title {\n        margin: 0px 12px;\n        padding: 72px 0 8px;\n        font-size: 12px;\n        border-bottom-style: solid;\n        border-bottom-width: thin;\n        border-bottom-color: #e9e9e9;\n    }\n\n    .custom-tooltip-value {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      margin: 8px 12px 0 12px;\n      padding-bottom: 8px;\n      font-size: 40px;\n      text-align: center;\n      border-bottom-style: solid;\n      border-bottom-width: thin;\n      border-bottom-color: #e9e9e9;\n      height: 70px;\n    }\n\n    .custom-tooltip-temp {\n      display: flex;\n      position: relative;\n      align-items: center;\n    }\n\n    .custom-tooltip-temp span:first-child {\n      font-size: 12px;\n      position: absolute;\n      top: 0px;\n      color: rgba(0, 0, 0, 0.45)\n    }\n\n    .custom-tooltip-temp span:last-child {\n      text-align: left;\n      margin-top: 10px;\n      position: relative;\n      color: rgba(0, 0, 0, 0.85)\n    }\n\n    .custom-tooltip-wind {\n        margin: 8px 12px 12px 12px;\n        font-size: 10px;\n        color: rgba(0, 0, 0, 0.45);\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    .tooltip-footer {\n      margin: 8px 12px 12px 12px;\n      font-size: 10px;\n      color: rgba(0, 0, 0, 0.45);\n    }\n\n    .background-image {\n      background-repeat: no-repeat;\n    }\n\n    .rain {\n        background-image: url(https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*sg5aT7dY36wAAAAAAAAAAABkARQnAQ);\n    }\n\n    .sun {\n        background-image: url(https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*gE_hS5JVl5YAAAAAAAAAAABkARQnAQ);\n    }\n\n    .cloud {\n        background-image: url(https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*BTw4R4O341AAAAAAAAAAAABkARQnAQ);\n    }\n`);\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/yTron%268MtC/range-data.json')\n  .then(data => data.json())\n  .then(data => {\n    const plot = new MultiView('container', {\n      appendPadding: [30, 20],\n      meta: {\n        date: { sync: true },\n        minTemp: { min: 0, max: 30 },\n        maxTemp: { min: 0, max: 30 },\n        values: { min: 0, max: 30 },\n      },\n      tooltip: {\n        showMarkers: false,\n        enterable: true,\n        domStyles: {\n          'g2-tooltip': {\n            width: '150px',\n            padding: 0,\n          },\n        },\n        customContent: (title, items) => {\n          const data = items[0]?.data || {};\n          const titleDom = `<div class =\"custom-tooltip-title\">${data.date}</div>`;\n          const tempDom = `<div class = \"custom-tooltip-value\"><div class = \"custom-tooltip-temp\"><span>低温</span><span>${data.minTemp}</span></div><div class = \"custom-tooltip-temp\"><span>高温</span><span>${data.maxTemp}</span></div></div>`;\n          const windDom = `<div class = \"custom-tooltip-wind\"><span>风向:${data.windDir}</span><span>风速:${data.windSpeed}</span></div>`;\n          let domClass;\n          if (data.rain === true) {\n            domClass = 'rain';\n          } else if (data.sunny === true) {\n            domClass = 'sun';\n          } else {\n            domClass = 'cloud';\n          }\n          return `<div class=\"background-image ${domClass}\">${titleDom}${tempDom}${windDom}<div class=\"tooltip-footer\">打开 <a href=\"https://weather.com/zh-CN/weather/today/l/CHXX0008:1:CH\" target=\"_blank\">天气预报网 ☁️</a></div></div>`;\n        },\n      },\n      views: [\n        {\n          data: data.map(d => {\n            return { ...d, values: [d.minTemp, d.maxTemp] };\n          }),\n          meta: {\n            date: { sync: true },\n            minTemp: { min: 0, max: 30 },\n            maxTemp: { min: 0, max: 30 },\n            values: { min: 0, max: 30 },\n          },\n          axes: {\n            date: {},\n            minTemp: false,\n            maxTemp: false,\n            values: {\n              position: 'left',\n            },\n          },\n          interactions: [{ type: 'active-region' }],\n          geometries: [\n            {\n              type: 'interval',\n              xField: 'date',\n              yField: 'values',\n              mapping: {\n                size: 4,\n                style: { fill: '#EBEDF0' },\n              },\n            },\n            {\n              type: 'point',\n              xField: 'date',\n              yField: 'minTemp',\n              colorField: 'maxTemp',\n              mapping: {\n                style: { r: 5 },\n                shape: 'circle',\n                color: ['#6ab7da', '#806bd9', '#da6bcc'],\n              },\n            },\n            {\n              type: 'point',\n              xField: 'date',\n              yField: 'maxTemp',\n              colorField: 'maxTemp',\n              mapping: {\n                size: 5,\n                shape: 'circle',\n                color: ['#6ab7da', '#806bd9', '#da6bcc'],\n              },\n            },\n          ],\n        },\n      ],\n    });\n\n    plot.render();\n  });\n"}},"staticQueryHashes":["2870822922","3272957548"]}